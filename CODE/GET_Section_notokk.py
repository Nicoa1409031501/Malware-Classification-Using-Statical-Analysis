import os
import glob
import r2pipe
import openpyxl

#function
'''
This function is to check whether the disassembling process work.
'''
def check_assembly(filename):


    #to check which dataset the sample belong 
    if filename in list_DIKE:
        r2_asm_file_size=os.path.getsize('/home/cape/Documents/DikeDataset-main/files/assembly_r2/'+filename+'.asm')
        obj_asm_file_size=os.path.getsize('/home/cape/Documents/DikeDataset-main/files/assembly/'+filename+'.asm')
    elif filename in list_MAMBA:
        r2_asm_file_size=os.path.getsize('/home/cape/Documents/mamba_dataset/mamba_assembly_by_r2/'+filename+'.asm')
        obj_asm_file_size=os.path.getsize('/home/cape/Documents/mamba_dataset/mamba_assembly/'+filename+'.asm')

    def checkobjdump(objsize):
        if objsize !=0:
            objdump_result="yes"
        else :
            objdump_result="no"
        return objdump_result
    def checkr2pdr(r2size):
        if r2size ==0:
            r2_result="no"
        else :
            r2_result="yes"
        return r2_result
    #print(filename,checkobjdump(obj_asm_file_size),obj_asm_file_size,checkr2pdr(r2_asm_file_size),r2_asm_file_size)
    return checkobjdump(obj_asm_file_size),obj_asm_file_size,checkr2pdr(r2_asm_file_size),r2_asm_file_size

def r2check(file):
    object=r2pipe.open(file)
    object.cmd('-qq aaaa')

    def checksection():
        sectionlist=object.cmd('iS').splitlines(True)
        def getlen():
            if len(sectionlist)-5>0:
                return len(sectionlist)-5
            else:
                return 0
        def setlist():
            list_section_in_single_sample=[]
            for i in range(4,len(sectionlist)):
                section_list_element=sectionlist[i].strip().split()
                if len(section_list_element)>7:
                        list_section_in_single_sample.append(section_list_element[7])
                        list_section_in_single_sample.append(str(section_list_element[2]))
                        list_section_in_single_sample.append(str(section_list_element[4]))
            return list_section_in_single_sample
        return getlen(),setlist()

    def checkimport():
        importlist=object.cmd('ii').splitlines(True)
        importcount=len(importlist)-3
        if importcount < 0:
            importcount=0
        return importcount
    def checklibrary():
        librarylist=object.cmd('il').splitlines(True)
        librarycount=len(librarylist)
        if librarycount < 0:
            librarycount=0
        return librarycount
    

    len_section,list_section=checksection()
    return checklibrary(),checkimport(),str(len_section),list_section
def getName(filePath):
    filename=os.path.basename(filePath)
    if filename in list_DIKE:
        filehash=filename.split('.')[0]
        return filename ,filehash
    return filename ,filename


#####################################################################
'''
This is the head of the code
'''
#####################################################################
if __name__=='__main__':
    #Setting the origin location of the samples
    Mamba_sample_path="/home/cape/Documents/mamba_dataset/MAMBA_dataset/*"
    Dike_sample_path="/home/cape/Documents/DikeDataset-main/files/malware/*"

    wb_Dike=openpyxl.Workbook()
    sheetd = wb_Dike.worksheets[0]

    list_samplelocation=[]
    list_DIKE=[]
    list_MAMBA=[]

    for i in glob.iglob(Mamba_sample_path):
        list_MAMBA.append(os.path.basename(i))
        list_samplelocation.append(i)
    for i in glob.iglob(Dike_sample_path):
        list_DIKE.append(os.path.basename(i))
        list_samplelocation.append(i)

    '''
    this section is for Dike dataset
    '''
    count1=0
    '''

    for i in glob.iglob(Dike_sample_path):
        count1+=1
        #if count1 ==50:break
        
        #reset the log
        log=[]
        filename,filehash=getName(i)
        log.append(filename)
        log.append(filehash)

        log.append(str(os.path.getsize(i)))

        ro=so=0
        ro,so,rr,sr=check_assembly(filename)
        log.append(ro)
        log.append(str(so))
        log.append(rr)
        log.append(str(sr))
               
        ii=il=0
        il,ii,iSl,iSlist=r2check(i)
        log.append(str(il))
        log.append(str(ii))
        log.append(iSl)
        log.extend(iSlist)

        print(count1,log)
        sheetd.append(log)
    wb_Dike.save("20230719_Dike.xlsx")

    '''

    wb_mamba=openpyxl.Workbook()
    sheetm = wb_mamba.worksheets[0]
    count1=0
    for i in glob.iglob(Mamba_sample_path):
        count1+=1
        #if count1 ==50 :break
        
        #reset the log
        log=[]
        filename,filehash=getName(i)
        log.append(filename)
        log.append(filehash)

        log.append(str(os.path.getsize(i)))

        ro=so=0
        ro,so,rr,sr=check_assembly(filename)
        log.append(ro)
        log.append(str(so))
        log.append(rr)
        log.append(str(sr))


        ii=il=0
        il,ii,iSl,iSlist=r2check(i)        
        log.append(str(il))
        log.append(str(ii))
        log.append(iSl)
        log.extend(iSlist)
        
        print(count1,log)
        sheetm.append(log)
    wb_mamba.save("20230731_MAMBA.xlsx")
    
    '''
    this seciton is for mamba dataset
    '''